name: Run Steam Watch

on:
  schedule:
    - cron: "0 9 * * *" # Run daily at 09am UTC

permissions:
  contents: read

jobs:
  check-steam-trains:
    name: Check for Steam Trains
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toc:
          - "PA"
          - "TY"
          - "LS"
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Set up Python
        run: uv python install
      - name: Download data
        id: download
        run: |
          curl -L --fail -u '${{ secrets.OPEN_RAIL_DATA_USER_PASS }}' 'https://publicdatafeeds.networkrail.co.uk/ntrod/CifFileAuthenticate?type=CIF_${{ matrix.toc }}_TOC_FULL_DAILY&day=toc-full' -o full.jsonl.gz
      - name: Find trains for station
        if: steps.download.conclusion == 'success'
        id: steamcheck
        run: |
          uv run python3 -m src.schedule_parser full.jsonl | jq '[.[] | select(.tiploc == "${{ secrets.STATION_TIPLOC }}")]' > steam_trains.json
          if [ ! -s steam_trains.json ]; then
            echo "No steam trains found."
            exit 0
          fi
          count=$(jq length steam_trains.json)
          echo "found_count=$count" >> "$GITHUB_OUTPUT"
      - name: Upload result
        id: upload
        if: steps.steamcheck.outputs.found_count != '0'
        uses: actions/upload-artifact@v4
        with:
          name: steam-trains
          path: steam_trains.json
      - name: Send e-mail
        id: message
        if: steps.steamcheck.outputs.found_count != '0'
        run: |
          curl -L --fail -u '${{ secrets.OPEN_RAIL_DATA_USER_PASS }}' 'https://publicdatafeeds.networkrail.co.uk/ntrod/SupportingFileAuthenticate?type=CORPUS' -o CORPUSExtract.json.gz
          gunzip CORPUSExtract.json.gz
          uv run python3 -m src.corpus_convert CORPUSExtract.json > tiploc.json
          uv run python3 -m src.message_render message.jinja2.md steam_trains.json tiploc.json > message.md
          curl -X POST \
            https://api.buttondown.com/v1/emails \
            -H "Authorization: Token ${{ secrets.BUTTONDOWN_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
                  "subject": "Possible steam trains found",
                  "body": "$(awk '{printf "%s\\n", $0}' message.md)",
                  "tags": ["${{ secrets.STATION_TIPLOC }}"],
                }'
  workflow-keepalive:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: liskin/gh-workflow-keepalive@v1
